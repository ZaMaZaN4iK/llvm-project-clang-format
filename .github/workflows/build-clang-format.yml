name: Clang Format

on:
  push:
    branches:
      - 'main'
      - 'release/**'
    paths:
      - 'clang/**'
      - '.github/workflows/build-clang-format.yml'
  pull_request:
    paths:
      - 'clang/**'

jobs:
  build_clang:
    name: clang-format
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-16.04
            artifact_name: clang-format
            asset_name: clang-format-ubuntu-16
          - os: ubuntu-latest
            artifact_name: clang-format
            asset_name: clang-format-linux-amd64
          - os: windows-latest
            artifact_name: clang-format.exe
            asset_name: clang-format-windows-amd64.exe
          - os: macOS-latest
            artifact_name: clang-format
            asset_name: clang-format-macos-amd64
    steps:
    - name: Setup Windows
      if: startsWith(matrix.os, 'windows')
      uses: llvm/actions/setup-windows@master
      with:
        arch: amd64
    - name: Install Ninja
      uses: llvm/actions/install-ninja@master
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build clang-format
      if: startsWith(matrix.os, 'ubuntu')
      uses: llvm/actions/build-test-llvm-project@master
      with:
        cmake_args: -G Ninja -DLLVM_ENABLE_PROJECTS="clang" -DLLVM_ENABLE_TERMINFO:BOOL=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS="-static-libgcc" -DCMAKE_CXX_FLAGS="-static-libgcc -static-libstdc++"
        build_target: clang-format
    - name: Build clang-format
      if: startsWith(matrix.os, 'windows') || startsWith(matrix.os, 'macOS')
      uses: llvm/actions/build-test-llvm-project@master
      with:
        cmake_args: -G Ninja -DLLVM_ENABLE_PROJECTS="clang" -DLLVM_ENABLE_TERMINFO:BOOL=OFF -DCMAKE_BUILD_TYPE=Release
        build_target: clang-format
    - name: Publish clang-format
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/bin/${{matrix.artifact_name}}
        asset_name: ${{matrix.asset_name}}
        tag: ${{ github.ref }}
        overwrite: true
